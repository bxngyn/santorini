Although this pset was pretty difficult, I think it really helped solidify in my mind all the different 
types of OOP mechanics I've learned throughout the semester. For most of the CS classes I've taken so far, 
there's usually starter code given. However, having no starter code for this pset forced me to think hard
about how I can utilize OOP mechanics to split up this game into modularized sections. This is also the first time
I have worked on a pset with a parter, and I think having a partner was actually very helpful, not only in the pure
workload sense, but also in sharing ideas and brainstorming ways in which design patterns can be implemented in
our program. The most difficult part of this pset for me was definitely the heuristic cpu implementation, as we had to
sort of "think into the future" and calculate the scores based on the future move positions, not where the current worker
is actually standing. Another difficulty I had with this pset was simply the breadth of it. It started off pretty small,
but as we kept working, we kept needing to add more classes or more design patterns, and so juggling all of this around
became a little difficult since most of the psets I've done before haven't dealt with this many moving parts. Overall though,
I'm pretty happy with my experience working with my partner and I think having the final product now is pretty cool.